@{
    ViewBag.Title = "Paypal";
}
<head>
    <!-- Add meta tags for mobile and IE -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title> PayPal Checkout Integration | Server Demo </title>
</head>

<!-- pages-title-start -->
<div class="pages-title section-padding">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <div class="pages-title-text text-center">
                    <h2>Paypal Payment</h2>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="pages contact-page section-padding">
    <div class="container text-center">
        <div class="row">
            <!-- pages-title-end -->
            <!-- contact content section start -->
            <!-- Set up a container element for the button -->
            <div id="paypal-button-container"></div>
            <div style="color:red" id="errormessage"></div>

        </div>

    </div>


</div>
<!-- Include the PayPal JavaScript SDK -->

<script src="https://www.paypal.com/sdk/js?client-id=AXvAhr8mO93ZzIkj8chLQYzC-pcblG-tnIyZYNMT2iAHh98QZHP__mfFMkMIVL-z1jIAf4fNS-xsJBA_&disable-funding=credit"></script>
@*<script src="https://www.paypal.com/sdk/js?client-id=AXvAhr8mO93ZzIkj8chLQYzC-pcblG-tnIyZYNMT2iAHh98QZHP__mfFMkMIVL-z1jIAf4fNS-xsJBA_&currency=USD"></script>*@

<script>
    // Render the PayPal button into #paypal-button-container
    paypal.Buttons({
        // Call your server to set up the transaction
        createOrder: function (data, actions) { 
            //return fetch('/demo/checkout/api/paypal/order/create/', {"PaypalPaymentMethod/Create"
            return fetch('@Url.Action("Create", "PaypalPaymentMethod")', {
                method: 'post'
            }).then(function (res) {
                return res.json();
            }).then(function (orderData) {
                if (orderData.Status ==  "CREATED") {
                    return orderData.Id;
                } else {
                    const element = document.getElementById('errormessage');
                    element.innerHTML = `<h3>${orderData.message}</h3> <a class="btn btn-danger" href='@Url.Action("Checkout","Orders")'> Go To Checkout</a> `;
                    return false;
                }
            });
        },

        // Call your server to finalize the transaction
        onApprove: function (data, actions) {
            //return fetch('/demo/checkout/api/paypal/order/' + data.orderID + '/capture/', {
            return fetch('@Url.Action("captureOrder", "PaypalPaymentMethod")?orderid=' + data.orderID, {
                method: 'post'
            }).then(function (res) {
                return res.json();
            }).then(function (orderData) {
                // Three cases to handle:
                //   (1) Recoverable INSTRUMENT_DECLINED -> call actions.restart()
                //   (2) Other non-recoverable errors -> Show a failure message
                //   (3) Successful transaction -> Show confirmation or thank you

                // This example reads a v2/checkout/orders capture response, propagated from the server
                // You could use a different API or structure for your 'orderData'
                var errorDetail = Array.isArray(orderData.details) && orderData.details[0];

                if (errorDetail && errorDetail.issue === 'INSTRUMENT_DECLINED') {
                    return actions.restart(); // Recoverable state, per:
                    // https://developer.paypal.com/docs/checkout/integration-features/funding-failure/
                }

                if (errorDetail) {
                    var msg = 'Sorry, your transaction could not be processed.';
                    if (errorDetail.description) msg += '\n\n' + errorDetail.description;
                    if (orderData.debug_id) msg += ' (' + orderData.debug_id + ')';
                    return alert(msg); // Show a failure message (try to avoid alerts in production environments)
                }
                debugger
                // Successful capture! For demo purposes:
                console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                //var transaction = orderData.purchase_units[0].payments.captures[0];
                //alert('Transaction '+ transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');
                //// Replace the above to show a success message within this page, e.g.
                alert();
                window.location.href = '@Url.Action("PaymentStatus","Payment")'
                const element = document.getElementById('paypal-button-container');
                element.innerHTML = '';
                element.innerHTML = '<h3>Thank you for your payment!</h3>';
                //Or go to another URL:  actions.redirect('thank_you.html');
            });
        }

    }).render('#paypal-button-container');</script>



