@model B2C_Models.Models.customer
@{
    ViewBag.Title = "Login";
}


<style>

    .nav-tabs, .tab-content {
        width: 51%;
    }

    /*.tab-content {
        width: 51%;
    }*/

    @@media screen and (max-width: 900px){
        .nav-tabs, .tab-content {
            width:100% !important;
        }
    }

    @@media screen and (max-width: 900px) {
        .nav-tabs, .tab-content {
            width: 100% !important;
        }
    }

    @@media (max-width: 767px) {
        .main-input.new-customer {
            margin-top: 0px;
        }
    }
</style>

<!-- pages-title-start -->
<div class="pages-title section-padding">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <div class="pages-title-text text-center">
                    <h2>Register</h2>
                    <ul class="text-left">
                        <li><a href="/Home/Index">Home </a></li>
                        <li><span> // </span>Register</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- pages-title-end -->

<section class="pages login-page section-padding">
    <div class="container">
        <div class="row ">
            <div class="d-flex justify-content-center" style="display: flex; justify-content: center; flex-flow: row wrap;">
            <ul class="nav nav-tabs" >
                <li class="active"><a data-toggle="tab" href="#home">Login</a></li>
                <li><a data-toggle="tab" href="#menu1">Register</a></li>
            </ul>

            <div class="tab-content  ">
                <div id="home" class="tab-pane fade in active">
                        <div class="main-input padding60">
                            <div class="log-title">
                                <h3><strong>Login Customer</strong></h3>
                            </div>
                            <div class="login-text">
                                <div class="custom-input">
                                    <p>If you have an account with us, Please log in!</p>
                                    <form id="login">
                                        @*action="mail.php" method="post"*@
                                        @*<input type="text" name="email" placeholder="Email" />*@
                                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @placeholder = "Email Address:", @class = "form-control" } })
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @placeholder = "Password:", @class = "form-control", Type = "Password" } })

                                        @*<input type="password" name="password" placeholder="Password" />*@
                                        <a class="forget" href="/Account/ForgotPassword">Forget your password?</a>
                                        <div class="submit-text">
                                            @*<a href="my-account.html">login</a>*@
                                            <button type="button" class="btn btn-success" id="loginbtn">Sign in</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                </div>
                <div id="menu1" class="tab-pane fade">
                        <div class="main-input padding60 new-customer">
                            <div class="log-title">
                                <h3><strong>new Customer</strong></h3>
                            </div>
                            <div class="custom-input">
                                <form class="register" id="register">
                                    @*action="mail.php" method="post*@
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @placeholder = "First Name:", @class = "form-control", @required = true } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @placeholder = "Last Name:", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @placeholder = "Phone #:", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })

                                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @placeholder = "DOB:", @class = "form-control", Type = "date" } })
                                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })

                                    @{
                                        if (Model.Id > 0)
                                        {
                                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @placeholder = "Gender:", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                        }
                                        else
                                        {
                                            <select class="form-control dropdown " name="Gender" id="Gender">
                                                <option value="Select">Select Gender</option>
                                                <option value="Male">Male</option>
                                                <option value="Female">Female</option>

                                            </select>
                                        }


                                    }

                                    <br />

                                    @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @placeholder = "Email Address:",  autocomplete = "off", @class = "email form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })

                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { autocomplete = "off", @placeholder = "Password:", @class = "Password form-control", id = "password", Type = "Password" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    <input class="form-control" type="password" name="ConfirmPassword" id="ConfirmPassword" placeholder="Confirm Password" required />
                                    <span id='message'></span>
                                    <div class="submit-text coupon">

                                        <button type="button" class="btn btn-success" id="btnAddSale">Sign up</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        var email;
        jQuery('#register').validate({
            rules: {
                FirstName: {
                    required: true,
                    maxlength: 50
                },
                LastName: {
                    required: true

                }, EmailId: {
                    required: true,
                    uniqueEmail: true

                }, DateOfBirth: {
                    required: true
                }, Gender: {
                    required: true
                }, password: {
                    required: true
                }, ConfirmPassword: {
                    required: true,
                    equalTo: ".Password"
                }, PhoneNo: {
                    required: true
                }

            },
            messages: {
                FirstName: {
                    required: "First Name Is Required"
                }, LastName: {
                    required: "Last Name Is Required"
                }, EmailId: {
                    required: "Email Is Required",
                    uniqueEmail: "Your Email address is already registered on our system."
                }, DateOfBirth: {
                    required: "DOB Is Required"
                }, Gender: {
                    required: "Gender Is Required"
                }, Password: {
                    required: "Password Is Required"
                }, ConfirmPassword: {
                    required: "Confirm Password Is Required",
                    equalTo: "Confirm Password must be equal to Password"
                }, PhoneNo: {
                    required: "Phone # Is Required"
                }
            }
        });
        jQuery('#login').validate({
            rules: {
                EmailId: {
                    required: true,
                    email: true





                }, Password: {
                    required: true





                }





            },
            messages: {
                EmailId: {
                    required: "Email Is Required"
                }, Password: {
                    required: "Password Is Required"
                }





            }
        });
        $('input[name="ConfirmPassword"]').keypress(function (e) {
            if (e.which == 13) {
                $('#btnAddSale').click();
                //$('form#login').submit();
                return false; //<---- Add this line
            }
        });


        // Registeration Submit Button
        $("#btnAddSale").click(function (e) {
            debugger
            var userinput = $('.email').val();
            var pattern = /^\b[A-Z0-9._%-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
            if (!pattern.test(userinput)) {
                toastr.error('not a valid e-mail address');
                alert('not a valid e-mail address');
            } else {
                email = $('.email').val();
                let emailOrgName = "/Account/uniqueEmailCheck?email=" + email;
                var Email = $('.email').val();
                // alert(Email);
                let result = false;
                $.ajax({
                    url: emailOrgName,
                    data: JSON.stringify(Email),
                    success: function (data) {
                        if (data.success == true) {
                            toastr.success(data.msg);
                            $('#btnAddSale').attr('disabled', false);
                            //-----------------------for sign up------------------------
                            var form = $("#register");
                            var datatosend = {
                                customer: {
                                    /* idx: $('#idx').val(),*/
                                    FirstName: $('#FirstName').val(),
                                    LastName: $('#LastName').val(),
                                    PhoneNo: $('#PhoneNo').val(),
                                    DateOfBirth: $('#DateOfBirth').val(),
                                    Gender: $('#Gender').val(),
                                    EmailId: $('.email').val(),
                                    Password: $('.Password').val()
                                }
                            }
                            $.validator.unobtrusive.parse(form);
                            //if ($(form).valid()) // using not operator for a time being
                            if ($(form)) {
                                $.ajax({
                                    type: "POST",
                                    url: "/Account/AddUpdate",
                                    data: JSON.stringify(datatosend),// JSON.stringify(milestonearray),// $(form).serialize(),
                                    contentType: 'application/json',
                                    dataType: 'json',
                                    success: function (data) {
                                        if (data.success == true) {
                                            toastr.success("Registered successfully.");
                                            window.location.reload();
                                        }
                                        else if (data.success == false || data.isSuccessful == false) {
                                            toastr.error("Registration Failed.");
                                        }
                                    },
                                    failure: function (data) {
                                        console.log(res);
                                        toastr.error("Registration Failed.");
                                    },
                                    err: function (res) {
                                        console.log(res);
                                    }
                                })
                            }
                            else {
                                return false;
                            }
                            //-----------------------for sign up------------------------

                        }
                        else if (data.success == false) {
                            toastr.error(data.msg);
                            $('#btnAddSale').attr('disabled', true);
                        }
                    },
                    async: false
                });
                console.log(result);
                // return result;
            }

 
        });





        $('#Password, #EmailId').keypress(function (e) {
            if (e.which == 13) {
                $('#loginbtn').click();
                //$('form#login').submit();
                return false; //<---- Add this line
            }
        });





        // Login Submit button
        $('#loginbtn').click(function (e) {
            e.preventDefault();
            var form = $("#login");
            document.getElementsByClassName("loader-container")[0].style.display = "block";

            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $.ajax({
                    type: "POST",
                    url: "/Account/Login",
                    data: $(form).serialize(),
                    //cache : false,
                    //processData: false,
                    success: function (data) {
                        document.getElementsByClassName("loader-container")[0].style.display = "none";
                        if (data.success == true /*&& res.count > 0*/) {
                            toastr.success("Login successfully.");
                            window.location = data.data;
                        }
                        else if (data.isSuccessful == false) {
                            //alert("Login Failed");
                            toastr.error("Login Failed.");
                        }
                    },
                    failure: function (res) {
                        console.log(res);
                    },
                    err: function (res) {
                        console.log(res);
                    }
                })
            }
            else {
                return false;
            }
        });






    </script>


}

