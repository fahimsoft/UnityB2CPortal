@model B2CPortal.Models.OrderVM
@{
    ViewBag.Title = "ManagePayment";
}
<!-- pages-title-start -->
<div class="pages-title section-padding">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <div class="pages-title-text text-center">
                    <h2>Manage Payment</h2>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- pages-title-end -->
<!-- Checkout content section start -->
<section class="pages checkout section-padding">

    <div class="container">
        @*<div class="row">
            <div class="col-sm-6">
                <div class="main-input single-cart-form padding60">
                    <div class="log-title">
                        <h3><strong>billing details</strong></h3>
                    </div>
                    <div class="custom-input">
                        <form id="billing">
                            @Html.HiddenFor(m => m.FK_Customer)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @placeholder = "First Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @placeholder = "Last Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @placeholder = "Email Address:", @class = " form-control" } })
                            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @placeholder = "Phone No:", @class = "form-control" } })

                            @if (Model.FK_Customer > 0)
                            {
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @placeholder = "Country:", @class = " form-control" } })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @placeholder = "City:", @class = " form-control" } }) }
                            else
                            {
                                <div class="custom-select">
                                    <select id="Country" class="form-control">
                                        <option value="Select"> Country</option>
                                        <option value="Pakistan"> Pakistan </option>
                                        <option value="United States"> United States </option>
                                        <option value="United Kingdom"> United Kingdom </option>
                                        <option value="Canada"> Canada </option>
                                        <option value="Malaysia"> Malaysia </option>
                                        <option value="United Arab Emirates"> United Arab Emirates </option>
                                    </select>
                                </div>

                                <div class="custom-select">
                                    <select id="City" class="form-control">
                                        <option value="Select"> Town / City</option>
                                        <option value="Karachi"> Karachi </option>
                                        <option value="Lahore"> Lahore </option>
                                        <option value="Islamabad"> Islamabad </option>
                                        <option value="Peshawar"> Peshawar </option>
                                        <option value="Quetta"> Quetta </option>
                                    </select>
                                </div>}
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @placeholder = "Address:", @class = " form-control" } })

                            <div class="row">
                                <label class="switch">
                                    <input class="shipto" id="shipto" type="checkbox" onclick="toggle('.myClass', this)">
                                    <span style="position:center" class=" slider round">

                                    </span>
                                </label>

                            </div>
                            SHIP TO DIFFERENT ADDRESS.
                        </form>
                    </div>
                </div>

            </div>




            <div style="display:none" class="myClass col-sm-6">
                <div class="main-input single-cart-form padding60">
                    <div class="log-title">
                        <h3><strong>ship to different address</strong></h3>
                    </div>
                    <div class="custom-input">
                        <form id="shipping">
                            @Html.HiddenFor(m => m.FK_Customer)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @placeholder = "First Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @placeholder = "Last Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @placeholder = "Email Address:", @class = " form-control" } })
                            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @placeholder = "Phone No:", @class = "form-control" } })

                            @if (Model.FK_Customer > 0)
                            {
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @placeholder = "Country:", @class = " form-control" } })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @placeholder = "City:", @class = " form-control" } }) }
                            else
                            {
                                <div class="custom-select">
                                    <select id="Country" class="form-control">
                                        <option value="Select"> Country</option>
                                        <option value="Pakistan"> Pakistan </option>
                                        <option value="United States"> United States </option>
                                        <option value="United Kingdom"> United Kingdom </option>
                                        <option value="Canada"> Canada </option>
                                        <option value="Malaysia"> Malaysia </option>
                                        <option value="United Arab Emirates"> United Arab Emirates </option>
                                    </select>
                                </div>

                                <div class="custom-select">
                                    <select id="City" class="form-control">
                                        <option value="Select"> Town / City</option>
                                        <option value="Karachi"> Karachi </option>
                                        <option value="Lahore"> Lahore </option>
                                        <option value="Islamabad"> Islamabad </option>
                                        <option value="Peshawar"> Peshawar </option>
                                        <option value="Quetta"> Quetta </option>
                                    </select>
                                </div>}
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @placeholder = "Address:", @class = "SAddress form-control" } })

                        </form>
                    </div>
                </div>
            </div>
        </div>*@

        <div class="row margin-top">
            <div class="col-xs-12 col-sm-6">
                <div class="padding60">
                    <div class="log-title">
                        <h3><strong>Our order</strong></h3>
                    </div>
                    <div class="cart-form-text pay-details table-responsive">
                        <table>
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <td>Total</td>
                                </tr>
                            </thead>

                            <tbody>

                                @if (Model.OrderDetailsViewModels != null)
                                {
                                    foreach (var item in Model.OrderDetailsViewModels)
                                    {
                                        <tr>
                                            <th>@item.Name<br /> @item.Price x @item.Quantity (%@item.Discount)  </th>
                                            <td> <strong class="pricesymbol"> </strong> @item.SubTotalPrice</td>
                                        </tr>
                                    }
                                }

                                <tr>
                                    <th>Order Subtotal</th>
                                    <td><strong class="pricesymbol"> </strong> 
                                        <input type="hidden"  id="orderid" name="name" value="@Model.Id" /> @Model.OrderDetailsViewModels.Sum(x=>x.Price * x.Quantity)</td>

                                </tr>
                                <tr>
                                    <th>Total Discount</th>
                                    <td> <strong class="pricesymbol"> </strong> @Model.OrderDetailsViewModels.Sum(x => x.DiscountAmount) </td>
                                </tr>

                                <tr>
                                    <th>Shipping and Handing</th>
                                    <td><strong class="pricesymbol"> </strong>  00.00</td>
                                </tr>
                                <tr>
                                    <th>Vat</th>
                                    <td> <strong class="pricesymbol"> </strong>  00.00</td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>Order total</th>
                                    <td><strong class="pricesymbol"> </strong>  @Model.OrderDetailsViewModels.Sum(x=> x.SubTotalPrice)</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>


            <div class="col-xs-12 col-sm-6">
                <div class="padding60">
                    <div class="log-title">
                        <h3><strong>Payment method</strong></h3>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="text-align: right; padding-right: 15px;" src="~/Content/logos/stripe.png" />
                        <input class="form-check-input" value="Stripe" type="radio" name="paymode">
                        <label class="form-check-label">
                            Stripe Payment
                        </label>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px;" src="~/Content/logos/hbl.png" />
                        <input class="form-check-input" value="HBL" type="radio" name="paymode">
                        <label class="form-check-label">
                            HBL (Habib Bank Limited)
                        </label>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px; height: 80px;" src="~/Content/logos/j.png" />
                        <input class="form-check-input" value="JazzCash" type="radio" name="paymode">
                        <label class="form-check-label">
                            Jazz Cash (Mobilink)
                        </label>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px;" src="~/Content/logos/ey.png" />
                        <input class="form-check-input" value="EasyPaisa" type="radio" name="paymode">
                        <label class="form-check-label">
                            Easypaisa (Telenor)
                        </label>
                    </div>
                    <hr />
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px; height: auto;" src="~/Content/logos/ccc.png" />
                        <input class="form-check-input" value="COD" type="radio" name="paymode">
                        <label class="form-check-label">
                            COD (Cash On Delivery)
                        </label>
                    </div>


                    @if (Model.TotalPrice > 0)
                    {
            <div class="submit-text">
                <a id="order">Update Order</a>
            </div>
                    }
                    else
                    {
            <a class="btn btn-primary" style="margin-left: 357px;" href="/Product/PorductList">Shop Now</a>
                    }
                </div>
            </div>


        </div>



        <!-- Modal starts -->

        <div class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Confirm Order</h3>
                        @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>*@
                    </div>
                    <div class="modal-body cartdrop-sin-container">

                        <div class="cart-form-text pay-details table-responsive">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <td>Total</td>
                                    </tr>
                                </thead>

                                <tbody>

                                    @if (Model.OrderDetailsViewModels != null)
                                    {
                                        foreach (var item in Model.OrderDetailsViewModels)
                                        {
                                            <tr>
                                                <th>@item.Name<br /> @item.Price x @item.Quantity (%@item.Discount)  </th>
                                                <td> <strong class="pricesymbol"> </strong> @item.SubTotalPrice</td>
                                            </tr>
                                        }
                                    }

                                    <tr>
                                        <th>Order Subtotal</th>
                                        <td>
                                            <strong class="pricesymbol"> </strong>
                                            <input type="hidden" id="orderid" name="name" value="@Model.Id" /> @Model.OrderDetailsViewModels.Sum(x => x.Price * x.Quantity)
                                        </td>

                                    </tr>
                                    <tr>
                                        <th>Total Discount</th>
                                        <td> <strong class="pricesymbol"> </strong> @Model.OrderDetailsViewModels.Sum(x => x.DiscountAmount) </td>
                                    </tr>

                                    <tr>
                                        <th>Shipping and Handing</th>
                                        <td><strong class="pricesymbol"> </strong>  00.00</td>
                                    </tr>
                                    <tr>
                                        <th>Vat</th>
                                        <td> <strong class="pricesymbol"> </strong>  00.00</td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>Order total</th>
                                        <td><strong class="pricesymbol"> </strong>  @Model.OrderDetailsViewModels.Sum(x => x.SubTotalPrice)</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" id="confirmBtn" class="btn btn-primary">Confirm</button>
                        <button type="button" class="cancelBtn btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal Ends -->


    </div>

</section>
<!-- Checkout content section end -->

@section scripts
{
    @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
    <script>


        $('#order').click(function () {
            $(this).attr('disabled', 'disabled');

            // Both Form Data
            if ($('input.shipto').is(':checked')) {
                //alert("ok");

            }
            // Only Billing Form Data
            // alert("No");
            var paymenttype = $("input[name='paymode']:checked").val();

            if (paymenttype == undefined || paymenttype == "") {
                toastr.error("Please Select Payment Type.");
            } else {

                $('.modal').show();
                $('.cancelBtn').click(function () {
                    $('confirmBtn').removeAttr('disabled');
                    $('.order').removeAttr('disabled');
                    $('.modal').hide();


                })
            }
        });
        $('#confirmBtn').click(function () {
            $(this).attr('disabled', 'disabled');
            var paymenttype = $("input[name='paymode']:checked").val();

            if (paymenttype == undefined || paymenttype == "") {
                toastr.error("Please Select Payment Type.");
            } else {
                var form = $("#billing");
                var datatosend = {
                    Billing: {
                        PaymentType: paymenttype,
                        id: $('#orderid').val()

                    }
                }

                document.getElementsByClassName("loader-container")[0].style.display = "block";

                $.ajax({
                    type: "POST",
                    url: "/Orders/UpdateOrder",
                    data: JSON.stringify(datatosend),// JSON.stringify(milestonearray),// $(form).serialize(),
                    contentType: 'application/json',
                    dataType: 'json',
                    success: function (data) {
                        if (data.success == true) {
                            window.location.href = data.data;// reload();
                            toastr.success(data.msg);
                        }
                        else if (data.success == false) {
                            toastr.error("Failed.");
                        }
                        document.getElementsByClassName("loader-container")[0].style.display = "none";
                    },
                    failure: function (data) {
                        console.log(data);
                    },
                    err: function (data) {
                        console.log(data);
                    }
                })


            }

        });

    </script>
}