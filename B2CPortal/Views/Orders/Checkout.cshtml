@model B2CPortal.Models.OrderVM
@{ ViewBag.Title = "Checkout"; }


<!-- pages-title-start -->
<div class="pages-title section-padding">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <div class="pages-title-text text-center">
                    <h2>Chcekout</h2>
                    <ul class="text-left">
                        <li><a href="/Home/Index">Home </a></li>
                        <li><span> // </span>Chcekout</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- pages-title-end -->
<!-- Checkout content section start -->
<section class="pages checkout section-padding">

    <div class="container">
        <div class="row">
            <div class="col-sm-6">
                <div class="main-input single-cart-form padding60">
                    <div class="log-title">
                        <h3><strong>billing details</strong></h3>
                    </div>
                    <div class="custom-input">
                        <form id="billing">
                            @Html.HiddenFor(m => m.FK_Customer)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @placeholder = "First Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @placeholder = "Last Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @placeholder = "Email Address:", @class = " form-control" } })
                            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @placeholder = "Phone #:", @class = "form-control" } })

                            @if (Model.FK_Customer > 0)
                            {
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @placeholder = "Country:", @class = " form-control" } })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @placeholder = "City:", @class = " form-control" } }) }
                            else
                            {
                                <div class="custom-select">
                                    <select id="Country" class="form-control">
                                        <option value="Select"> Country</option>
                                        <option value="Pakistan"> Pakistan </option>
                                        <option value="United States"> United States </option>
                                        <option value="United Kingdom"> United Kingdom </option>
                                        <option value="Canada"> Canada </option>
                                        <option value="Malaysia"> Malaysia </option>
                                        <option value="United Arab Emirates"> United Arab Emirates </option>
                                    </select>
                                </div>

                                <div class="custom-select">
                                    <select id="City" class="form-control">
                                        <option value="Select"> Town / City</option>
                                        <option value="Karachi"> Karachi </option>
                                        <option value="Lahore"> Lahore </option>
                                        <option value="Islamabad"> Islamabad </option>
                                        <option value="Peshawar"> Peshawar </option>
                                        <option value="Quetta"> Quetta </option>
                                    </select>
                                </div>}
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @placeholder = "Address:", @class = " form-control" } })

                            <div class="row">
                                <label class="switch">
                                    <input class="shipto" id="shipto" type="checkbox" onclick="toggle('.myClass', this)">
                                    <span style="position:center" class=" slider round">

                                    </span>
                                </label>

                            </div>
                            SHIP TO DIFFERENT ADDRESS.
                        </form>
                    </div>
                </div>

            </div>




            <div style="display:none" class="myClass col-sm-6">
                <div class="main-input single-cart-form padding60">
                    <div class="log-title">
                        <h3><strong>Shipping Details</strong></h3>
                    </div>
                    <div class="custom-input">
                        <form id="shipping">
                            @Html.HiddenFor(m => m.FK_Customer)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @placeholder = "First Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @placeholder = "Last Name:", @class = "form-control" } })
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @placeholder = "Email Address:", @class = " form-control" } })
                            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @placeholder = "Phone #:", @class = "form-control" } })

                            @if (Model.FK_Customer > 0)
                            {
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @placeholder = "Country:", @class = " form-control" } })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @placeholder = "City:", @class = " form-control" } }) }
                            else
                            {
                                <div class="custom-select">
                                    <select id="Country" class="form-control">
                                        <option value="Select"> Country</option>
                                        <option value="Pakistan"> Pakistan </option>
                                        <option value="United States"> United States </option>
                                        <option value="United Kingdom"> United Kingdom </option>
                                        <option value="Canada"> Canada </option>
                                        <option value="Malaysia"> Malaysia </option>
                                        <option value="United Arab Emirates"> United Arab Emirates </option>
                                    </select>
                                </div>

                                <div class="custom-select">
                                    <select id="City" class="form-control">
                                        <option value="Select"> Town / City</option>
                                        <option value="Karachi"> Karachi </option>
                                        <option value="Lahore"> Lahore </option>
                                        <option value="Islamabad"> Islamabad </option>
                                        <option value="Peshawar"> Peshawar </option>
                                        <option value="Quetta"> Quetta </option>
                                    </select>
                                </div>}
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @placeholder = "Address:", @class = "SAddress form-control" } })

                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="row margin-top">
            <div class="col-xs-12 col-sm-6">
                <div class="padding60">
                    <div class="log-title">
                        <h3><strong>order Summary </strong></h3>
                    </div>
                    <div class="cart-form-text pay-details table-responsive">
                        <table>
                            <thead>
                                <tr>
                                    <th>Particulars</th>
                                    <td>Total</td>
                                </tr>
                            </thead>

                            <tbody>

                                @if (Model.orderVMs != null)
                                {
                                    foreach (var item in Model.orderVMs)
                                    {
                                        <tr>
                                            <th>@item.Name<br /> @item.Price x @item.Quantity (% @item.Discount)  </th>
                                            <td> <strong class="pricesymbol"> </strong> @{var price = item.Price * item.Quantity; } @price </td>
                                        </tr>

                                        @*<tr>
                                            <th>@item.Name  x @item.Quantity</th>
                                            <td> <strong class="pricesymbol"> </strong> @item.SubTotalPrice</td>
                                        </tr>*@
                                    }
                                }

                                <tr>
                                    <th>Cart Subtotal</th>
                                    <td>  @Model.CartSubTotal</td>

                                </tr>
                                <tr>
                                    <th>Total Discount</th>
                                    <td> @Model.CartSubTotalDiscount </td>
                                </tr>

                                <tr>
                                    <th>Shipping and Handing</th>
                                    <td> 00.00</td>
                                </tr>
                                <tr>
                                    <th>Vat</th>
                                    <td>  00.00</td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>Order total</th>
                                    <td><strong class="pricesymbol"> </strong>  @Model.OrderTotal</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>


            <div class="col-xs-12 col-sm-6">
                <div class="padding60">
                    <div class="log-title">
                        <h3><strong>Payment method</strong></h3>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="text-align: right; padding-right: 15px;" src="~/Content/logos/stripe.png" />
                        <input  @(Model.Currency.ToLower() == "pkr" ? "" : "disabled") class="form-check-input" value="Stripe"  type="radio" name="paymode" >
                        <label class="form-check-label" >
                            Stripe Payment
                        </label>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px;" src="~/Content/logos/hbl.png" />
                        <input @(Model.Currency.ToLower() == "pkr" ? "" : "disabled")   class="form-check-input" value="HBL" type="radio" name="paymode" >
                        <label class="form-check-label" >
                            HBL (Habib Bank Limited)
                        </label>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px; height: 80px;" src="~/Content/logos/j.png" />
                        <input @(Model.Currency.ToLower() == "pkr" ? "" : "disabled") class="form-check-input" value="JazzCash" type="radio" name="paymode" >
                        <label class="form-check-label" >
                            Jazz Cash (Mobilink)
                        </label>
                    </div>
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px;" src="~/Content/logos/ey.png" />
                        <input @(Model.Currency.ToLower() == "pkr" ? "" : "disabled") class="form-check-input" value="EasyPaisa" type="radio" name="paymode" >
                        <label class="form-check-label" >
                            Easypaisa (Telenor)
                        </label>
                    </div>
                    <hr />
                    <div class="form-check">
                        <img width="100" height="50" style="padding-right: 15px; height: auto;" src="~/Content/logos/ccc.png" />
                        <input @(Model.Currency.ToLower() == "pkr" ? "" : "disabled") class="form-check-input" value="COD" type="radio" name="paymode" >
                        <label class="form-check-label" >
                            COD (Cash On Delivery)
                        </label>
                    </div>


                    @if (Model.OrderTotal > 0)
                    {
                        <div class="submit-text">
                            <a id="order">place order</a>
                        </div>
                    }
                    else
                    {
                        <a class="btn btn-primary" style="margin-left: 357px;" href="/Product/PorductList">Shop Now</a>
                    }
                </div>
            </div>


        </div>



        <!-- Modal starts -->

        <div class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Confirm Order</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                    </div>
                    <div class="modal-body cartdrop-sin-container">

                        <div class="cart-form-text pay-details table-responsive">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <td>Total</td>
                                    </tr>
                                </thead>

                                <tbody>

                                    @if (Model.orderVMs != null)
                                    {
                                        foreach (var item in Model.orderVMs)
                                        {
                                            <tr>
                                                <th>@item.Name<br /> @item.Price x @item.Quantity (% @item.Discount)  </th>
                                                <td> <strong class="pricesymbol"> </strong> @{var price = item.Price * item.Quantity; } @price </td>
                                            </tr>
                                        }
                                    }

                                    <tr>
                                        <th>Cart Subtotal</th>
                                        <td><strong class="pricesymbol"> </strong>  @Model.CartSubTotal</td>

                                    </tr>
                                    <tr>
                                        <th>Total Discount</th>
                                        <td> <strong class="pricesymbol"> </strong> @Model.CartSubTotalDiscount </td>
                                    </tr>

                                    <tr>
                                        <th>Shipping and Handing</th>
                                        <td><strong class="pricesymbol"> </strong>  00.00</td>
                                    </tr>
                                    <tr>
                                        <th>Vat</th>
                                        <td> <strong class="pricesymbol"> </strong>  00.00</td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>Order total</th>
                                        <td><strong class="pricesymbol"> </strong>  @Model.OrderTotal</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" id="confirmBtn" class="btn btn-primary">Confirm</button>
                        <button type="button" class="cancelBtn btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal Ends -->


    </div>

</section>
<!-- Checkout content section end -->

@section scripts
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        jQuery('#billing').validate({
            rules: {
                FirstName: {
                    required: true,

                    maxlength: 50
                },
                LastName: {
                    required: true

                }, EmailId: {
                    required: true,
                    email: true

                }, PhoneNo: {
                    required: true
                }, Country: {
                    required: true
                }, City: {
                    required: true

                }
                , Address: {
                    required: true

                }

            },
            messages: {
                FirstName: {
                    required: "First Name Is Required"
                }, LastName: {
                    required: "Last Name Is Required"
                }, EmailId: {
                    required: "Email Is Required",
                    uniqueEmail: "Your Email address is already registered on our system."
                }, Country: {
                    required: "Country Is Required"
                }, City: {
                    required: "City Is Required"
                }, Address: {
                    required: "Address Is Required"
                }, PhoneNo: {
                    required: "Phone # Is Required"
                }

            }
        });



        $('#order').click(function () {
            $(this).attr('disabled', 'disabled');

            // Both Form Data
            if ($('input.shipto').is(':checked')) {
                //alert("ok");

            }
            // Only Billing Form Data
            // alert("No");
            var paymenttype = $("input[name='paymode']:checked").val();
           
            if (paymenttype == undefined || paymenttype == "") {
                toastr.error("Please Select Payment Type.");
            } else {
                var form = $("#billing");
                var datatosend = {
                    Billing: {
                        /*Id: $('#Id').val(),*/
                        PhoneNo: $('#PhoneNo').val(),
                        EmailId: $('#EmailId').val(),
                        Country: $('#Country').val(),
                        City: $('#City').val(),
                        BillingAddress: $('#Address').val(),
                        ShippingAddress: $('.SAddress').val(),
                        PaymentType: paymenttype// $('input[name="paymode"]:checked').val()
                    }
                }

                console.log(JSON.stringify(datatosend));
                console.log(datatosend);

                $('.modal').show();
                $('.cancelBtn').click(function () {
                    $('confirmBtn').removeAttr('disabled');
                    $('.order').removeAttr('disabled');
                    $('.modal').hide();


                })
            }
        });
        $('#confirmBtn').click(function () {
            $(this).attr('disabled', 'disabled');
            var paymenttype = $("input[name='paymode']:checked").val();

            if (paymenttype == undefined || paymenttype == "") {
                toastr.error("Please Select Payment Type.");
            } else {
                var form = $("#billing");
                var datatosend = {
                    Billing: {
                        /*Id: $('#Id').val(),*/
                        PhoneNo: $('#PhoneNo').val(),
                        EmailId: $('#EmailId').val(),
                        Country: $('#Country').val(),
                        City: $('#City').val(),
                        BillingAddress: $('#Address').val(),
                        ShippingAddress: $('.SAddress').val(),
                        PaymentType: paymenttype// $('input[name="paymode"]:checked').val()
                    }
                }

                document.getElementsByClassName("loader-container")[0].style.display = "block";
                $(this).removeData("validator").removeData("unobtrusiveValidation");//remove the form validation
                $.validator.unobtrusive.parse($(this));//add the form validation
                $.validator.unobtrusive.parse(form);
                //if ($(form).valid()) // using not operator for a time being
                if ($(form.valid())) {
                    $.ajax({
                        type: "POST",
                        url: "/Orders/AddBillingDetails",
                        data: JSON.stringify(datatosend),// JSON.stringify(milestonearray),// $(form).serialize(),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            if (data.success == true) {
                                window.location.href = data.data;// reload();
                                toastr.success(data.msg);
                            }
                            else if (data.success == false) {
                                toastr.error("Failed.");
                            }
                            document.getElementsByClassName("loader-container")[0].style.display = "none";
                        },
                        failure: function (data) {
                            console.log(data);
                        },
                        err: function (data) {
                            console.log(data);
                        }
                    })
                }
                else {
                    $(this).removeAttr('disabled');
                    $('.order').removeAttr('disabled');

                    return false;
                }

            }

        })

    </script>
}